JAVASCRIPT ARRAY & OBJECTS, JSON


=>JavaScript Arrays

  ->Arrays are used to store multiple values in a single variable. Here's how they work:

  ->Creating an Array

    let fruits = ["Apple", "Banana", "Cherry"];

  ->Accessing Elements
  
    console.log(fruits[0]); // Apple
    console.log(fruits[1]); // Banana

  ->Modifying Elements
  
    fruits[1] = "Blueberry";
    console.log(fruits); // ["Apple", "Blueberry", "Cherry"]

=>Array Methods
  ->push(): Adds a new element to the end.
    fruits.push("Mango"); // ["Apple", "Blueberry", "Cherry", "Mango"]

  ->pop(): Removes the last element.
  fruits.pop(); // ["Apple", "Blueberry", "Cherry"]
  
  ->shift(): Removes the first element.


  ->fruits.shift(); // ["Blueberry", "Cherry"]
  
  ->unshift(): Adds a new element to the beginning.
  fruits.unshift("Strawberry"); // ["Strawberry", "Blueberry", "Cherry"]

==============================================================


=>JavaScript Objects
Objects are collections of key-value pairs.

  ->Creating an Object


  let person = {
    firstName: "John",
    lastName: "Doe",
    age: 25,
    fullName: function() {
      return this.firstName + " " + this.lastName;
    }
  };


  ->Accessing Properties

  console.log(person.firstName); // John
  console.log(person["lastName"]); // Doe

  ->Modifying Properties
    javascript
    person.age = 30;
    console.log(person.age); // 30


  ->Methods

  console.log(person.fullName()); // John Doe

  ==========================================================

=>JSON (JavaScript Object Notation):

JSON is a lightweight data interchange format that's easy for humans to read and write, and easy for machines to parse and generate. It's often used for transmitting data in web applications.

  ->Converting Object to JSON

  let jsonString = JSON.stringify(person);
  console.log(jsonString);
  // {"firstName":"John","lastName":"Doe","age":30,"fullName":{}}


  ->Parsing JSON to Object

    let parsedObject = JSON.parse(jsonString);
    console.log(parsedObject);
    // {firstName: "John", lastName: "Doe", age: 30, fullName: {}}

*******************************************************************
  diffrence between json.stringify and json.parse

  The methods JSON.stringify() and JSON.parse() in JavaScript are used to convert data to and from the JSON format, respectively. Here’s a detailed look at each and their differences:
    --------------------------------------
    JSON.stringify()
    Purpose: Converts a JavaScript object or value to a JSON string.

    Usage Example:

    javascript
    const obj = { name: "John", age: 30, city: "New York" };
    const jsonString = JSON.stringify(obj);
    console.log(jsonString); // Output: '{"name":"John","age":30,"city":"New York"}'
    ---------------------------------------

    ->Common Use Cases:

      -->Sending data to a server: JSON strings are commonly used in HTTP requests when communicating with APIs.

      -->Storing data: Saving a JSON string in local storage, cookies, or databases.

  =>JSON.parse()
  Purpose: Converts a JSON string back into a JavaScript object.

    --------------------------------------------
    Usage Example:

    javascript
    const jsonString = '{"name": "John", "age": 30, "city": "New York"}';
    const obj = JSON.parse(jsonString);
    console.log(obj.name); // Output: John
    console.log(obj.age);  // Output: 30
    console.log(obj.city); // Output: New York
    ---------------------------------------------
  ->Common Use Cases:

    -->Receiving data from a server: Parsing JSON strings received from APIs into JavaScript objects for further manipulation.

    -->Retrieving data: Converting JSON strings stored in local storage, cookies, or databases back into JavaScript objects.

  =>Key Differences
    Conversion Direction:

      -->JSON.stringify(): JavaScript object/value → JSON string.

      -->JSON.parse(): JSON string → JavaScript object/value.

  =>Typical Use Scenarios:

    -->Use JSON.stringify() when you need to prepare JavaScript data to be sent or stored in a format that is easy to transport or save.

    -->Use JSON.parse() when you need to convert JSON data received from a server or loaded from storage back into a format that you can manipulate with JavaScript.

*******************************************************************


  JSON is incredibly useful for data exchange between a server and a client, as it provides a simple and straightforward format.

  Is there anything specific you'd like to dive deeper into? Maybe some array methods or object manipulations? I'm here to help!